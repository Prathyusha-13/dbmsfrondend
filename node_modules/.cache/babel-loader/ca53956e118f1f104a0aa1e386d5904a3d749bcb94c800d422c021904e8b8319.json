{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vicky\\\\Downloads\\\\dbfront-main\\\\dbfront-main\\\\src\\\\components\\\\Chart_m_4_1.js\";\n// Its quite similar to Chart_m_2_1\nimport { LineChart } from '@mui/x-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart_m_4_1(props) {\n  console.log(\"chart data: \", props);\n  if (props.data == null || JSON.stringify(props.data) === \"{}\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Change parameters on the left to obtain graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  } else {\n    const countries = [];\n    let allSeries = [];\n    console.log(props.data.rank);\n    for (const [key, value] of Object.entries(props.data.rank)) {\n      countries.push(key);\n    }\n    console.log(props.data.rank[countries[0]]);\n    countries.forEach(c => {\n      let seriesData = {\n        yAxisKey: 'y1',\n        data: props.data.rank[c].y,\n        label: c,\n        valueFormatter: value => value == null ? 'NaN' : value.toString()\n      };\n      allSeries.push(seriesData);\n    });\n    console.log(\"tobeGraphed\", allSeries);\n    return /*#__PURE__*/_jsxDEV(LineChart, {\n      xAxis: [{\n        data: props.data.x,\n        scaleType: 'band'\n      }],\n      yAxis: [{\n        id: 'y1',\n        scaleType: 'linear'\n      }],\n      series: allSeries,\n      leftAxis: \"y1\",\n      height: 500,\n      margin: {\n        top: 100,\n        bottom: 100,\n        left: 100,\n        right: 100\n      },\n      slotProps: {\n        legend: {\n          direction: 'row',\n          position: {\n            vertical: 'top',\n            horizontal: 'middle'\n          },\n          padding: 0\n        }\n      },\n      sx: {\n        '.MuiLineElement-root, .MuiMarkElement-root': {\n          strokeWidth: 13\n        },\n        '.MuiLineElement-series-pvId': {\n          strokeDasharray: '4 4'\n        },\n        '.MuiLineElement-series-uvId': {\n          strokeDasharray: '3 4 5 2'\n        },\n        '.MuiMarkElement-root:not(.MuiMarkElement-highlighted)': {\n          fill: '#fff',\n          strokeWidth: 1\n          // markerwidth : 20\n        },\n\n        '& .MuiMarkElement-highlighted': {\n          stroke: 'None'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  }\n}\n_c = Chart_m_4_1;\nexport default Chart_m_4_1;\n\n//   {\n//     \"data\": {\n//         \"x\": [\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014,\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014\n//         ],\n//         \"y1\": [\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\"\n//         ],\n//         \"y2\": [\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1\n//         ]\n//     },\n//     \"isError\": false,\n//     \"message\": \"Success\",\n//     \"statusCode\": 200\n// }\nvar _c;\n$RefreshReg$(_c, \"Chart_m_4_1\");","map":{"version":3,"names":["LineChart","jsxDEV","_jsxDEV","Chart_m_4_1","props","console","log","data","JSON","stringify","align","children","fileName","_jsxFileName","lineNumber","columnNumber","countries","allSeries","rank","key","value","Object","entries","push","forEach","c","seriesData","yAxisKey","y","label","valueFormatter","toString","xAxis","x","scaleType","yAxis","id","series","leftAxis","height","margin","top","bottom","left","right","slotProps","legend","direction","position","vertical","horizontal","padding","sx","strokeWidth","strokeDasharray","fill","stroke","_c","$RefreshReg$"],"sources":["C:/Users/vicky/Downloads/dbfront-main/dbfront-main/src/components/Chart_m_4_1.js"],"sourcesContent":["// Its quite similar to Chart_m_2_1\nimport { LineChart } from '@mui/x-charts';\n\nfunction Chart_m_4_1(props) {\n  console.log(\"chart data: \", props)\n  if(props.data == null || JSON.stringify(props.data) === \"{}\"){\n    return(<div align=\"center\">\n      <p>Change parameters on the left to obtain graph</p>\n    </div>)\n  }\n  else{\n    const countries = [];\n    let allSeries = [];\n    console.log(props.data.rank);\n    for (const [key, value] of Object.entries(props.data.rank)) {\n        countries.push(key);\n      }\n    console.log(props.data.rank[countries[0]]);\n    countries.forEach(c =>{\n        let seriesData = {\n            yAxisKey: 'y1',\n            data: props.data.rank[c].y,\n            label: c,\n            valueFormatter: (value) => (value == null ? 'NaN' : value.toString()),\n        }\n        allSeries.push(seriesData);\n    });\n    console.log(\"tobeGraphed\", allSeries);\n    return(\n    <LineChart\n      xAxis={[{ data: props.data.x , scaleType: 'band'}]}\n      yAxis={[\n        { id: 'y1', scaleType: 'linear' }\n      ]}\n      series={allSeries}\n      leftAxis=\"y1\"\n      height={500}\n      margin={{ top: 100, bottom: 100, left: 100, right:100 }}\n      slotProps={{\n        legend: {\n          direction: 'row',\n          position: { vertical: 'top', horizontal: 'middle' },\n          padding: 0,\n        },\n      }}\n      sx={{\n        '.MuiLineElement-root, .MuiMarkElement-root': {\n          strokeWidth: 13,\n        },\n        '.MuiLineElement-series-pvId': {\n          strokeDasharray: '4 4',\n        },\n        '.MuiLineElement-series-uvId': {\n          strokeDasharray: '3 4 5 2',\n        },\n        '.MuiMarkElement-root:not(.MuiMarkElement-highlighted)': {\n          fill: '#fff',\n          strokeWidth: 1\n          // markerwidth : 20\n  \n        },\n        '& .MuiMarkElement-highlighted': {\n          stroke: 'None',\n        },\n      }}\n    />\n    )\n  }\n  }\n\n  export default Chart_m_4_1;\n\n//   {\n//     \"data\": {\n//         \"x\": [\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014,\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2001,\n//             2002,\n//             2003,\n//             2004,\n//             2005,\n//             2006,\n//             2007,\n//             2008,\n//             2009,\n//             2010,\n//             2011,\n//             2012,\n//             2013,\n//             2014\n//         ],\n//         \"y1\": [\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"China\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"India\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"Japan\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\",\n//             \"United States\"\n//         ],\n//         \"y2\": [\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             2,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             3,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1,\n//             1\n//         ]\n//     },\n//     \"isError\": false,\n//     \"message\": \"Success\",\n//     \"statusCode\": 200\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}